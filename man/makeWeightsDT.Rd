% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/survival_aggregated.R
\name{makeWeightsDT}
\alias{makeWeightsDT}
\title{Make a \code{data.table} of Tabulated, Aggregated Values and Weights}
\usage{
makeWeightsDT(data, values = NULL, print = NULL, adjust = NULL,
  formula = NULL, Surv.response = TRUE, by.other = NULL,
  custom.levels = NULL, weights = NULL, enclos = parent.frame(1L))
}
\arguments{
\item{data}{DF/DT; passed to \code{envir} in \code{eval}}

\item{values}{values to tabulate. Anything \code{evalPopArg} can evaluate.}

\item{print}{variables to tabulate by and include in \code{prVars} in attributes}

\item{adjust}{variables to tabulate by and include in \code{adVars} in attributes}

\item{Surv.response}{logical, if \code{TRUE} throws error if response in
\code{formula} is not a \code{Surv} object and vice versa}

\item{by.other}{other variables to tabulate by and include 
in \code{boVars} in attributes}

\item{custom.levels}{a named list of values. When "inflating" the data
in the cross-join / cartesian join sense (try e.g. \code{merge(1:5, 1:2)}),
one can supply the levels to inflate by using this to ensure inflation is full.
E.g. data might only have levels present to do inflation analogous to
\code{merge(2:5, 1:2)} although \code{merge(1:5, 1:2)} is intended and 
needed.}

\item{weights}{a named list or long-form data.frame of weights. See Examples.}

\item{enclos}{the enclosing environment passed on to \code{eval}. Variables
not found in \code{data} or searched for here.}

\item{a}{formula such as \code{fot ~ sex} or \code{Surv(fot, lex.Xst) ~ sex}}
}
\examples{
makeWeightsDT <- popEpi:::makeWeightsDT ## this avoids errors during tests

sire <- copy(popEpi::sire)
set.seed(1L)
sire$sex <- rbinom(nrow(sire), 1, 0.5)
ag <- lexpand(sire, birth = "bi_date", entry = "dg_date", exit = "ex_date",
              status = status \%in\% 1:2, pophaz = popmort, pp = FALSE,
              aggre = list(sex, agegr = cut(dg_age, c(0,50,75,Inf)), fot), 
              fot = seq(0, 5, 1/12))
ps <- quote(list(sex, fot))
as <- quote(list(agegr))
vs <- quote(list(pyrs, at.risk))
ws <- list(agegr = c(0.2,0.4,0.4))

#### custom.levels usage
fb <- seq(0, 5-1/12, 1/12)
ag2 <- ag[fot > 0.5,]
# repeats fot intervals < 0.5 as empty rows
# may be the safest way to do this
dt <- makeWeightsDT(ag2, print = ps, adjust = as, 
                    values = vs, weights = ws,
                    custom.levels = list(fot = fb))

#### use of enclos
TF <- environment()
gender <- factor(ag$sex)
dt <- makeWeightsDT(ag, print = quote(gender), adjust = as, 
                    values = vs, weights = ws, enclos = TF)
## or
dt <- makeWeightsDT(ag, print = quote(gender), adjust = as, 
                    values = vs, weights = ws,
                    enclos = parent.frame(1L))

#### formula usage
form <- Surv(fot, factor(from0to1))~gender
dt <- makeWeightsDT(ag, formula = form, Surv.response = TRUE,
                    adjust = as, values = vs, weights = ws,
                    enclos = parent.frame(1L))
                    
## or
form <- Surv(fot, factor(from0to1))~gender + adjust(agegr)
dt <- makeWeightsDT(ag, formula = form, Surv.response = TRUE,
                    adjust = NULL, values = vs, weights = ws,
                    enclos = parent.frame(1L))
                    
## or   
form <- from0to1 ~ fot + gender + adjust(agegr)
dt <- makeWeightsDT(ag, formula = form, Surv.response = FALSE,
                    adjust = NULL, values = vs, weights = ws,
                    enclos = parent.frame(1L))            
                    
                    
}

